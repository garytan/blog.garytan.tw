<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Gary Blog</title>
    <link>https://blog.garytan.tw/posts/</link>
    <description>Recent content in Posts on Gary Blog</description>
    <generator>Hugo -- 0.139.2</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 26 Sep 2024 13:46:01 +0800</lastBuildDate>
    <atom:link href="https://blog.garytan.tw/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>建立安全可靠的軟體開發流程</title>
      <link>https://blog.garytan.tw/posts/security/establishing-a-secure-and-reliable-software-development-process/</link>
      <pubDate>Thu, 26 Sep 2024 13:46:01 +0800</pubDate>
      <guid>https://blog.garytan.tw/posts/security/establishing-a-secure-and-reliable-software-development-process/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ecloudvalley.com/tw/blog/sa-talks-establishing-a-secure-and-reliable-software-development-process&#34;&gt;eCloudValley: 架構師淺談 建立安全可靠的軟體開發流程&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;安全軟體開發生命週期ssdlc介紹&#34;&gt;安全軟體開發生命週期（SSDLC）介紹&lt;/h2&gt;
&lt;p&gt;安全軟體開發生命週期（SSDLC）是一個將安全性考量整合到軟體開發過程中的方法，旨在從一開始就預防和減少安全漏洞。這個方法不僅能提升軟體的安全性，還能減少後期修復安全漏洞的成本。SSDLC 通常包含以下幾個主要階段：需求分析、設計、實作、測試、部署和維護。每個階段都有特定的安全實踐和工具來保障軟體的安全性。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;需求分析階段&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;目標&#34;&gt;目標&lt;/h3&gt;
&lt;p&gt;確保所有安全需求都得到充分的識別和記錄。&lt;/p&gt;
&lt;h3 id=&#34;實作方式&#34;&gt;實作方式&lt;/h3&gt;
&lt;h4 id=&#34;威脅建模threat-modeling&#34;&gt;威脅建模（Threat Modeling）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：識別系統中可能存在的威脅，並確定如何應對這些威脅。&lt;/li&gt;
&lt;li&gt;AWS 原生服務：AWS 威脅建模工具（AWS Threat Modeling）可以幫助識別和分析威脅，並提供相應的緩解措施。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;安全需求規範&#34;&gt;安全需求規範&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：確保安全需求被納入需求規範中，涵蓋認證、授權、數據保護等方面。&lt;/li&gt;
&lt;li&gt;最佳實踐：參考 OWASP Application Security Verification Standard（ASVS）來確定各種安全需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;設計階段&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;目標-1&#34;&gt;目標&lt;/h3&gt;
&lt;p&gt;在設計階段建構安全架構，選擇合適的安全控制措施。&lt;/p&gt;
&lt;h3 id=&#34;實作方式-1&#34;&gt;實作方式&lt;/h3&gt;
&lt;h4 id=&#34;安全架構設計&#34;&gt;安全架構設計&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：應用安全設計模式和最佳實踐，確保系統設計能抵禦已知威脅。&lt;/li&gt;
&lt;li&gt;AWS 原生服務：使用 AWS Well-Architected Framework 中的安全支柱（Security Pillar）來設計安全架構。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;設計審查&#34;&gt;設計審查&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：進行安全設計審查，確保設計符合安全需求。&lt;/li&gt;
&lt;li&gt;AWS 原生服務： AWS Well-Architected Tool 可以幫助審查設計，確保符合安全最佳實踐。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;實作階段&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;目標-2&#34;&gt;目標&lt;/h3&gt;
&lt;p&gt;編寫安全的程式碼，並進行持續的安全檢查。&lt;/p&gt;
&lt;h3 id=&#34;實作方式-2&#34;&gt;實作方式&lt;/h3&gt;
&lt;h4 id=&#34;安全程式碼編寫&#34;&gt;安全程式碼編寫&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：遵循安全編碼標準和指南，減少程式碼中的安全漏洞。&lt;/li&gt;
&lt;li&gt;資源：參考 OWASP 安全編碼指南，確保程式碼符合安全標準。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;靜態應用安全測試sast&#34;&gt;靜態應用安全測試（SAST）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：使用靜態分析工具檢查程式碼中的安全漏洞。&lt;/li&gt;
&lt;li&gt;AWS 原生服務：Amazon CodeGuru Reviewer 可以自動審查程式碼並提出改進建議。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;依賴性管理&#34;&gt;依賴性管理&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;目的：確保使用安全的第三方庫和框架，避免引入已知漏洞。&lt;/li&gt;
&lt;li&gt;AWS 原生服務：AWS CodeArtifact 可以管理和存儲軟體包，確保依賴庫的安全性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在這個階段也建議可以導入版本控制系統 (Git)， Git 使用 SHA-1 來標識每個提交、文件和目錄。這意味著任何變更皆可以被檢測到，這樣的設計確保了數據的完整性，防止了未經授權的修改，且一旦提交被創建並推送到儲存庫中，其歷史記錄是不可變的，這意味著開發者無法隱瞞或篡改他們之前的變更，這提供了一個清晰的審計軌跡，使得任何變更都可以追溯到具體的提交和責任人，若企業所架設的網站疑似遭到攻擊者上傳木馬或後門，開發者可以立即使用最乾淨的版本進行快速重新部署。&lt;/p&gt;</description>
    </item>
    <item>
      <title>企業該如何評估 SOC 需要收容哪種資料</title>
      <link>https://blog.garytan.tw/posts/security/how-should-organization-evaluate-which-data-soc-needs-to-collect/</link>
      <pubDate>Thu, 23 May 2024 11:12:09 +0800</pubDate>
      <guid>https://blog.garytan.tw/posts/security/how-should-organization-evaluate-which-data-soc-needs-to-collect/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.ecloudvalley.com/tw/blog/sa-talks-how-should-organization-evaluate-which-data-soc-needs-to-collect&#34;&gt;eCloudValley: 架構師淺談 企業該如何評估 SOC 需要收容哪種資料&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我們可以藉由 SOC 收容各種作業系統、設備以及應用程式產出之日誌紀錄進行關聯分析，我們可以從收容的各端點日誌紀錄發現可能潛在的攻擊風險。那身為資安工程師的我們，該如何去評估決定該將哪些日誌紀錄送至 SOC 中進行儲存及分析？以一般雲端環境如 AWS 為例，我們首要先收容的日誌紀錄會是與 AWS 基礎設施相關的紀錄內容，如：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;VPC flow log&lt;/li&gt;
&lt;li&gt;RDS audit log/Aurora audit log&lt;/li&gt;
&lt;li&gt;AWS WAF log&lt;/li&gt;
&lt;li&gt;AWS Cloudtrail log&lt;/li&gt;
&lt;li&gt;AWS GuardDuty log&lt;/li&gt;
&lt;li&gt;Amazon CloudFront log&lt;/li&gt;
&lt;li&gt;Elastic load balancing (ALB) log&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那於地端環境呢？在地端環境中我們可以收容哪些內容，來增加我們整體的資安防禦能力。&lt;/p&gt;
&lt;p&gt;在以往我們事件調查時的經驗，常常會遇到日誌紀錄收集不完全而造成線索中斷，無法完整的還原整起攻擊事件的全貌，我們可以藉由收容以下的日誌內容以保全完整的攻擊軌跡。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Windows eventlog&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;開啟命令列程序稽核（Command line auditing）
可於群組原則中開啟此功能（電腦設定 &amp;gt; Windows 設定 &amp;gt; 安全性設定 &amp;gt; 進階稽核設定 &amp;gt; 詳細追蹤 &amp;gt; 稽核程序建立），並且開啟新的原則設定（系統管理範本 &amp;gt; 系統 &amp;gt; 稽核程序建立 &amp;gt; 在程序建立事件中包括命令列），開啟此功能後若有程式執行系統指令即會在 Security eventlog  中記錄一筆 4688 的紀錄。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt=&#34;audit_1&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/how-should-organization-evaluate-which-data-soc-needs-to-collect/1388643462664ef1c9f24eb.png&#34;&gt;
&lt;img alt=&#34;audit_2&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/how-should-organization-evaluate-which-data-soc-needs-to-collect/486989219664ef1e51c3c4.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>HITCON 2021 DEVCORE Wargame Writeup</title>
      <link>https://blog.garytan.tw/posts/security/hitcon-2021-devcore-wargame-writeup/</link>
      <pubDate>Tue, 30 Nov 2021 22:19:10 +0800</pubDate>
      <guid>https://blog.garytan.tw/posts/security/hitcon-2021-devcore-wargame-writeup/</guid>
      <description>&lt;h2 id=&#34;flag-1&#34;&gt;Flag 1&lt;/h2&gt;
&lt;p&gt;在首頁可以看到一張圖片，URL長成這樣。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;pic&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/hitcon-2021-devcore-wargame-writeup/pic.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;http://web.ctf.devcore.tw/image.php?id=aHBfbTI4M2Zkdy5qcGc=&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;其中 &lt;code&gt;aHBfbTI4M2Zkdy5qcGc=&lt;/code&gt; 拿去 base64 deocde 會變成 &lt;code&gt;hp_m283fdw.jpg&lt;/code&gt; ，發現是一個檔名，
這裡可以嘗試 path traversal。&lt;/p&gt;
&lt;p&gt;嘗試讀取 &lt;code&gt;../../../../etc/passwd&lt;/code&gt; 成功，繼續嘗試讀取 source code。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;etc_passwd&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/hitcon-2021-devcore-wargame-writeup/etc_passwd.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;先讀取 mount device &lt;code&gt;../../../../proc/mounts&lt;/code&gt;，嘗試找出 web root。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;proc_mounts&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/hitcon-2021-devcore-wargame-writeup/proc_mounts.png&#34;&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/dev/sda /usr/share/nginx/frontend ext4 ro,relatime,errors=remount-ro,data=ordered 0 0
/dev/sda /usr/share/nginx/images ext4 rw,relatime,errors=remount-ro,data=ordered 0 0
/dev/sda /usr/share/nginx/b8ck3nd ext4 ro,relatime,errors=remount-ro,data=ordered 0 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接著讀取 &lt;code&gt;/usr/share/nginx/frontend/index.php&lt;/code&gt; 可以發現首頁的 source code。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;frontend_index&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/hitcon-2021-devcore-wargame-writeup/frontend_index.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;裡面有引入 &lt;code&gt;include.php&lt;/code&gt;，讀取 &lt;code&gt;include.php&lt;/code&gt; 後可以在裡面發現第一個 flag。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;frontend_include&#34; loading=&#34;lazy&#34; src=&#34;https://blog.garytan.tw/img/posts/security/hitcon-2021-devcore-wargame-writeup/frontend_include.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;flag-2&#34;&gt;Flag 2&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;order.php&lt;/code&gt; 中，可以看到 &lt;code&gt;sig&lt;/code&gt; 沒有做型別的驗證，可以利用 PHP 的弱型別繞過程式中的 &lt;code&gt;sig&lt;/code&gt; 驗證。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# order.php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;require_once&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;include.php&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_get_param&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$sig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_get_param&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sig&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($id) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($sig)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;header&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Location: /&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;exit&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;intval&lt;/span&gt;($id);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$pdo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_pdo&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $pdo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;SELECT * FROM orders WHERE id = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;$id, &lt;span style=&#34;color:#a6e22e&#34;&gt;PDO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;FETCH_ASSOC&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$order &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $res&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fetch&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;$order) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $_SESSION[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error_msg&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;找不到此訂單&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;require_once&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error.php&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$sig_hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_sig_hash&lt;/span&gt;($sig);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($sig_hash &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $sig_hash &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; $order[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sig_hash&amp;#39;&lt;/span&gt;]) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $_SESSION[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error_msg&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;訂單網址參數錯誤&amp;#39;&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;require_once&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;error.php&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;switch&lt;/span&gt; ($order[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;status&amp;#39;&lt;/span&gt;]) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORDER_STATUS_PICKING&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORDER_STATUS_PACKING&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORDER_STATUS_SENDING&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORDER_STATUS_DELIVERING&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORDER_STATUS_ARRIVED&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ORDER_STATUS_FINISH&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# include.php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_sig_hash&lt;/span&gt;($data) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $pdo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;get_pdo&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $pdo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT `value` FROM options WHERE `key` = &amp;#39;sig_secret&amp;#39; LIMIT 1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;PDO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;FETCH_ASSOC&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $row &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $res&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fetch&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;$row) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $secret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;random_str&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $pdo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;exec&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;INSERT INTO options VALUES (&amp;#39;sig_secret&amp;#39;, &amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;$secret&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#39;), (&amp;#39;sig_algorithm&amp;#39;, &amp;#39;sha256&amp;#39;)&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $secret &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $row[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $pdo&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SELECT `value` FROM options WHERE `key` = &amp;#39;sig_algorithm&amp;#39; LIMIT 1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;PDO&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;FETCH_ASSOC&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $algo &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $res&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fetch&lt;/span&gt;()[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;hash_hmac&lt;/span&gt;($algo, $data, $secret);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果將 &lt;code&gt;sig&lt;/code&gt; 以陣列的方式傳入 &lt;code&gt;if ($sig_hash &amp;amp;&amp;amp; $sig_hash != $order[&#39;sig_hash&#39;])&lt;/code&gt; 結果會變成 &lt;code&gt;if (NULL &amp;amp;&amp;amp; NULL != &amp;quot;abc&amp;quot;)&lt;/code&gt; 恆為 False。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
